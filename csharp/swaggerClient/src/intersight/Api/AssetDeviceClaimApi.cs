/* 
 * Intersight REST API
 *
 * This is Intersight REST API 
 *
 * OpenAPI spec version: 1.0.9-228
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using intersight.Client;
using intersight.Model;

namespace intersight.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAssetDeviceClaimApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns></returns>
        void AssetDeviceClaimsMoidDelete (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15);

        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> AssetDeviceClaimsMoidDeleteWithHttpInfo (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15);
        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns></returns>
        void AssetDeviceClaimsPost (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15);

        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> AssetDeviceClaimsPostWithHttpInfo (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task AssetDeviceClaimsMoidDeleteAsync (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15);

        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> AssetDeviceClaimsMoidDeleteAsyncWithHttpInfo (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15);
        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task AssetDeviceClaimsPostAsync (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15);

        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39;
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> AssetDeviceClaimsPostAsyncWithHttpInfo (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class AssetDeviceClaimApi : IAssetDeviceClaimApi
    {
        private intersight.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="AssetDeviceClaimApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AssetDeviceClaimApi(String basePath)
        {
            this.Configuration = new Configuration(new ApiClient(basePath));

            ExceptionFactory = intersight.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AssetDeviceClaimApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public AssetDeviceClaimApi(Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = intersight.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public intersight.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public Dictionary<String, String> DefaultHeader()
        {
            return this.Configuration.DefaultHeader;
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns></returns>
        public void AssetDeviceClaimsMoidDelete (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15)
        {
             AssetDeviceClaimsMoidDeleteWithHttpInfo(moid, moid2, moid3, moid4, moid5, moid6, moid7, moid8, moid9, moid10, moid11, moid12, moid13, moid14, moid15);
        }

        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> AssetDeviceClaimsMoidDeleteWithHttpInfo (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15)
        {
            // verify the required parameter 'moid' is set
            if (moid == null)
                throw new ApiException(400, "Missing required parameter 'moid' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid2' is set
            if (moid2 == null)
                throw new ApiException(400, "Missing required parameter 'moid2' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid3' is set
            if (moid3 == null)
                throw new ApiException(400, "Missing required parameter 'moid3' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid4' is set
            if (moid4 == null)
                throw new ApiException(400, "Missing required parameter 'moid4' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid5' is set
            if (moid5 == null)
                throw new ApiException(400, "Missing required parameter 'moid5' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid6' is set
            if (moid6 == null)
                throw new ApiException(400, "Missing required parameter 'moid6' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid7' is set
            if (moid7 == null)
                throw new ApiException(400, "Missing required parameter 'moid7' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid8' is set
            if (moid8 == null)
                throw new ApiException(400, "Missing required parameter 'moid8' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid9' is set
            if (moid9 == null)
                throw new ApiException(400, "Missing required parameter 'moid9' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid10' is set
            if (moid10 == null)
                throw new ApiException(400, "Missing required parameter 'moid10' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid11' is set
            if (moid11 == null)
                throw new ApiException(400, "Missing required parameter 'moid11' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid12' is set
            if (moid12 == null)
                throw new ApiException(400, "Missing required parameter 'moid12' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid13' is set
            if (moid13 == null)
                throw new ApiException(400, "Missing required parameter 'moid13' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid14' is set
            if (moid14 == null)
                throw new ApiException(400, "Missing required parameter 'moid14' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid15' is set
            if (moid15 == null)
                throw new ApiException(400, "Missing required parameter 'moid15' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");

            var localVarPath = "/asset/DeviceClaims/{moid}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (moid != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid)); // path parameter
            if (moid2 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid2)); // path parameter
            if (moid3 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid3)); // path parameter
            if (moid4 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid4)); // path parameter
            if (moid5 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid5)); // path parameter
            if (moid6 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid6)); // path parameter
            if (moid7 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid7)); // path parameter
            if (moid8 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid8)); // path parameter
            if (moid9 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid9)); // path parameter
            if (moid10 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid10)); // path parameter
            if (moid11 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid11)); // path parameter
            if (moid12 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid12)); // path parameter
            if (moid13 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid13)); // path parameter
            if (moid14 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid14)); // path parameter
            if (moid15 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid15)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("AssetDeviceClaimsMoidDelete", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task AssetDeviceClaimsMoidDeleteAsync (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15)
        {
             await AssetDeviceClaimsMoidDeleteAsyncWithHttpInfo(moid, moid2, moid3, moid4, moid5, moid6, moid7, moid8, moid9, moid10, moid11, moid12, moid13, moid14, moid15);

        }

        /// <summary>
        /// Delete an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moid">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid2">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid3">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid4">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid5">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid6">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid7">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid8">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid9">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid10">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid11">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid12">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid13">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid14">The moid of the assetDeviceClaim instance.</param>
        /// <param name="moid15">The moid of the assetDeviceClaim instance.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> AssetDeviceClaimsMoidDeleteAsyncWithHttpInfo (string moid, string moid2, string moid3, string moid4, string moid5, string moid6, string moid7, string moid8, string moid9, string moid10, string moid11, string moid12, string moid13, string moid14, string moid15)
        {
            // verify the required parameter 'moid' is set
            if (moid == null)
                throw new ApiException(400, "Missing required parameter 'moid' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid2' is set
            if (moid2 == null)
                throw new ApiException(400, "Missing required parameter 'moid2' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid3' is set
            if (moid3 == null)
                throw new ApiException(400, "Missing required parameter 'moid3' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid4' is set
            if (moid4 == null)
                throw new ApiException(400, "Missing required parameter 'moid4' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid5' is set
            if (moid5 == null)
                throw new ApiException(400, "Missing required parameter 'moid5' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid6' is set
            if (moid6 == null)
                throw new ApiException(400, "Missing required parameter 'moid6' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid7' is set
            if (moid7 == null)
                throw new ApiException(400, "Missing required parameter 'moid7' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid8' is set
            if (moid8 == null)
                throw new ApiException(400, "Missing required parameter 'moid8' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid9' is set
            if (moid9 == null)
                throw new ApiException(400, "Missing required parameter 'moid9' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid10' is set
            if (moid10 == null)
                throw new ApiException(400, "Missing required parameter 'moid10' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid11' is set
            if (moid11 == null)
                throw new ApiException(400, "Missing required parameter 'moid11' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid12' is set
            if (moid12 == null)
                throw new ApiException(400, "Missing required parameter 'moid12' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid13' is set
            if (moid13 == null)
                throw new ApiException(400, "Missing required parameter 'moid13' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid14' is set
            if (moid14 == null)
                throw new ApiException(400, "Missing required parameter 'moid14' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");
            // verify the required parameter 'moid15' is set
            if (moid15 == null)
                throw new ApiException(400, "Missing required parameter 'moid15' when calling AssetDeviceClaimApi->AssetDeviceClaimsMoidDelete");

            var localVarPath = "/asset/DeviceClaims/{moid}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (moid != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid)); // path parameter
            if (moid2 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid2)); // path parameter
            if (moid3 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid3)); // path parameter
            if (moid4 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid4)); // path parameter
            if (moid5 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid5)); // path parameter
            if (moid6 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid6)); // path parameter
            if (moid7 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid7)); // path parameter
            if (moid8 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid8)); // path parameter
            if (moid9 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid9)); // path parameter
            if (moid10 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid10)); // path parameter
            if (moid11 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid11)); // path parameter
            if (moid12 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid12)); // path parameter
            if (moid13 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid13)); // path parameter
            if (moid14 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid14)); // path parameter
            if (moid15 != null) localVarPathParams.Add("moid", Configuration.ApiClient.ParameterToString(moid15)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("AssetDeviceClaimsMoidDelete", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns></returns>
        public void AssetDeviceClaimsPost (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15)
        {
             AssetDeviceClaimsPostWithHttpInfo(body, body2, body3, body4, body5, body6, body7, body8, body9, body10, body11, body12, body13, body14, body15);
        }

        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> AssetDeviceClaimsPostWithHttpInfo (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body2' is set
            if (body2 == null)
                throw new ApiException(400, "Missing required parameter 'body2' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body3' is set
            if (body3 == null)
                throw new ApiException(400, "Missing required parameter 'body3' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body4' is set
            if (body4 == null)
                throw new ApiException(400, "Missing required parameter 'body4' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body5' is set
            if (body5 == null)
                throw new ApiException(400, "Missing required parameter 'body5' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body6' is set
            if (body6 == null)
                throw new ApiException(400, "Missing required parameter 'body6' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body7' is set
            if (body7 == null)
                throw new ApiException(400, "Missing required parameter 'body7' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body8' is set
            if (body8 == null)
                throw new ApiException(400, "Missing required parameter 'body8' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body9' is set
            if (body9 == null)
                throw new ApiException(400, "Missing required parameter 'body9' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body10' is set
            if (body10 == null)
                throw new ApiException(400, "Missing required parameter 'body10' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body11' is set
            if (body11 == null)
                throw new ApiException(400, "Missing required parameter 'body11' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body12' is set
            if (body12 == null)
                throw new ApiException(400, "Missing required parameter 'body12' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body13' is set
            if (body13 == null)
                throw new ApiException(400, "Missing required parameter 'body13' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body14' is set
            if (body14 == null)
                throw new ApiException(400, "Missing required parameter 'body14' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body15' is set
            if (body15 == null)
                throw new ApiException(400, "Missing required parameter 'body15' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");

            var localVarPath = "/asset/DeviceClaims";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body15 != null && body15.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body15); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body15; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("AssetDeviceClaimsPost", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task AssetDeviceClaimsPostAsync (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15)
        {
             await AssetDeviceClaimsPostAsyncWithHttpInfo(body, body2, body3, body4, body5, body6, body7, body8, body9, body10, body11, body12, body13, body14, body15);

        }

        /// <summary>
        /// Create an instance of &#39;assetDeviceClaim&#39; 
        /// </summary>
        /// <exception cref="intersight.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">assetDeviceClaim to add</param>
        /// <param name="body2">assetDeviceClaim to add</param>
        /// <param name="body3">assetDeviceClaim to add</param>
        /// <param name="body4">assetDeviceClaim to add</param>
        /// <param name="body5">assetDeviceClaim to add</param>
        /// <param name="body6">assetDeviceClaim to add</param>
        /// <param name="body7">assetDeviceClaim to add</param>
        /// <param name="body8">assetDeviceClaim to add</param>
        /// <param name="body9">assetDeviceClaim to add</param>
        /// <param name="body10">assetDeviceClaim to add</param>
        /// <param name="body11">assetDeviceClaim to add</param>
        /// <param name="body12">assetDeviceClaim to add</param>
        /// <param name="body13">assetDeviceClaim to add</param>
        /// <param name="body14">assetDeviceClaim to add</param>
        /// <param name="body15">assetDeviceClaim to add</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> AssetDeviceClaimsPostAsyncWithHttpInfo (AssetDeviceClaim body, AssetDeviceClaim body2, AssetDeviceClaim body3, AssetDeviceClaim body4, AssetDeviceClaim body5, AssetDeviceClaim body6, AssetDeviceClaim body7, AssetDeviceClaim body8, AssetDeviceClaim body9, AssetDeviceClaim body10, AssetDeviceClaim body11, AssetDeviceClaim body12, AssetDeviceClaim body13, AssetDeviceClaim body14, AssetDeviceClaim body15)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body2' is set
            if (body2 == null)
                throw new ApiException(400, "Missing required parameter 'body2' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body3' is set
            if (body3 == null)
                throw new ApiException(400, "Missing required parameter 'body3' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body4' is set
            if (body4 == null)
                throw new ApiException(400, "Missing required parameter 'body4' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body5' is set
            if (body5 == null)
                throw new ApiException(400, "Missing required parameter 'body5' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body6' is set
            if (body6 == null)
                throw new ApiException(400, "Missing required parameter 'body6' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body7' is set
            if (body7 == null)
                throw new ApiException(400, "Missing required parameter 'body7' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body8' is set
            if (body8 == null)
                throw new ApiException(400, "Missing required parameter 'body8' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body9' is set
            if (body9 == null)
                throw new ApiException(400, "Missing required parameter 'body9' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body10' is set
            if (body10 == null)
                throw new ApiException(400, "Missing required parameter 'body10' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body11' is set
            if (body11 == null)
                throw new ApiException(400, "Missing required parameter 'body11' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body12' is set
            if (body12 == null)
                throw new ApiException(400, "Missing required parameter 'body12' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body13' is set
            if (body13 == null)
                throw new ApiException(400, "Missing required parameter 'body13' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body14' is set
            if (body14 == null)
                throw new ApiException(400, "Missing required parameter 'body14' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");
            // verify the required parameter 'body15' is set
            if (body15 == null)
                throw new ApiException(400, "Missing required parameter 'body15' when calling AssetDeviceClaimApi->AssetDeviceClaimsPost");

            var localVarPath = "/asset/DeviceClaims";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body15 != null && body15.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body15); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body15; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("AssetDeviceClaimsPost", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

    }
}
