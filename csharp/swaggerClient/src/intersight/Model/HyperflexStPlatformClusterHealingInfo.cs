/* 
 * Intersight REST API
 *
 * This is Intersight REST API 
 *
 * OpenAPI spec version: 1.0.9-228
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = intersight.Client.SwaggerDateConverter;

namespace intersight.Model
{
    /// <summary>
    /// HyperflexStPlatformClusterHealingInfo
    /// </summary>
    [DataContract]
    public partial class HyperflexStPlatformClusterHealingInfo :  IEquatable<HyperflexStPlatformClusterHealingInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HyperflexStPlatformClusterHealingInfo" /> class.
        /// </summary>
        /// <param name="Messages">Messages.</param>
        /// <param name="MessagesIterator">MessagesIterator.</param>
        public HyperflexStPlatformClusterHealingInfo(List<string> Messages = default(List<string>), Object MessagesIterator = default(Object))
        {
            this.Messages = Messages;
            this.MessagesIterator = MessagesIterator;
        }
        
        /// <summary>
        /// Gets or Sets EstimatedCompletionTimeInSeconds
        /// </summary>
        [DataMember(Name="EstimatedCompletionTimeInSeconds", EmitDefaultValue=false)]
        public long? EstimatedCompletionTimeInSeconds { get; private set; }

        /// <summary>
        /// Gets or Sets InProgress
        /// </summary>
        [DataMember(Name="InProgress", EmitDefaultValue=false)]
        public bool? InProgress { get; private set; }

        /// <summary>
        /// Gets or Sets Messages
        /// </summary>
        [DataMember(Name="Messages", EmitDefaultValue=false)]
        public List<string> Messages { get; set; }

        /// <summary>
        /// Gets or Sets MessagesIterator
        /// </summary>
        [DataMember(Name="MessagesIterator", EmitDefaultValue=false)]
        public Object MessagesIterator { get; set; }

        /// <summary>
        /// Gets or Sets MessagesSize
        /// </summary>
        [DataMember(Name="MessagesSize", EmitDefaultValue=false)]
        public long? MessagesSize { get; private set; }

        /// <summary>
        /// Gets or Sets PercentComplete
        /// </summary>
        [DataMember(Name="PercentComplete", EmitDefaultValue=false)]
        public long? PercentComplete { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class HyperflexStPlatformClusterHealingInfo {\n");
            sb.Append("  EstimatedCompletionTimeInSeconds: ").Append(EstimatedCompletionTimeInSeconds).Append("\n");
            sb.Append("  InProgress: ").Append(InProgress).Append("\n");
            sb.Append("  Messages: ").Append(Messages).Append("\n");
            sb.Append("  MessagesIterator: ").Append(MessagesIterator).Append("\n");
            sb.Append("  MessagesSize: ").Append(MessagesSize).Append("\n");
            sb.Append("  PercentComplete: ").Append(PercentComplete).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as HyperflexStPlatformClusterHealingInfo);
        }

        /// <summary>
        /// Returns true if HyperflexStPlatformClusterHealingInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of HyperflexStPlatformClusterHealingInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(HyperflexStPlatformClusterHealingInfo other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.EstimatedCompletionTimeInSeconds == other.EstimatedCompletionTimeInSeconds ||
                    this.EstimatedCompletionTimeInSeconds != null &&
                    this.EstimatedCompletionTimeInSeconds.Equals(other.EstimatedCompletionTimeInSeconds)
                ) && 
                (
                    this.InProgress == other.InProgress ||
                    this.InProgress != null &&
                    this.InProgress.Equals(other.InProgress)
                ) && 
                (
                    this.Messages == other.Messages ||
                    this.Messages != null &&
                    this.Messages.SequenceEqual(other.Messages)
                ) && 
                (
                    this.MessagesIterator == other.MessagesIterator ||
                    this.MessagesIterator != null &&
                    this.MessagesIterator.Equals(other.MessagesIterator)
                ) && 
                (
                    this.MessagesSize == other.MessagesSize ||
                    this.MessagesSize != null &&
                    this.MessagesSize.Equals(other.MessagesSize)
                ) && 
                (
                    this.PercentComplete == other.PercentComplete ||
                    this.PercentComplete != null &&
                    this.PercentComplete.Equals(other.PercentComplete)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.EstimatedCompletionTimeInSeconds != null)
                    hash = hash * 59 + this.EstimatedCompletionTimeInSeconds.GetHashCode();
                if (this.InProgress != null)
                    hash = hash * 59 + this.InProgress.GetHashCode();
                if (this.Messages != null)
                    hash = hash * 59 + this.Messages.GetHashCode();
                if (this.MessagesIterator != null)
                    hash = hash * 59 + this.MessagesIterator.GetHashCode();
                if (this.MessagesSize != null)
                    hash = hash * 59 + this.MessagesSize.GetHashCode();
                if (this.PercentComplete != null)
                    hash = hash * 59 + this.PercentComplete.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
